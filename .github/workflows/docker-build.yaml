# Workflow name
name: Build and Publish Docker Image to GHCR

# Triggers for the workflow
on:
  push:
    branches:
      - main # Trigger on push to the main branch

# Define the jobs to be executed
# Add concurrency to cancel running jobs when new pushes happen
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-publish:
    # The runner environment for this job
    runs-on: ubuntu-latest

    # Permissions required for the job
    permissions:
      contents: read # Allow reading the repository contents
      packages: write # Allow writing to GitHub Packages (GHCR)

    # Steps to be executed in this job
    steps:
      # Step 1: Checkout the repository code
      # This action checks out your repository under $GITHUB_WORKSPACE,
      # so your workflow can access it.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx
      # Docker Buildx is an extension of Docker that provides enhanced build capabilities.
      # It's recommended for building Docker images in GitHub Actions.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to GitHub Container Registry (GHCR)
      # This action logs into a Docker registry.
      # We use GITHUB_TOKEN for authentication with GHCR.
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # The GitHub username of the actor who initiated the workflow
          password: ${{ secrets.GITHUB_TOKEN }} # The automatically provided GitHub token for authentication

      # Step 4: Define image metadata (name and tag)
      # We'll use the repository name as the image name and the commit SHA as a tag.
      # The latest tag will also be applied to the main branch pushes.
      - name: Define image name and tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}-frontend # Image name will be ghcr.io/owner/repo-name-frontend
          tags: |
            type=sha,format=long # Tag with the full commit SHA
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }} # Tag as 'latest' if on main branch

      # Step 5: Build and push the Docker image
      # This action builds and pushes Docker images.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # The build context (current directory)
          push: true # Push the image to the registry
          tags: ${{ steps.meta.outputs.tags }} # Use the tags defined in the 'meta' step
          labels: ${{ steps.meta.outputs.labels }} # Use the labels defined in the 'meta' step
          cache-from: type=gha # Cache layers from GitHub Actions cache
          cache-to: type=gha,mode=max # Cache layers to GitHub Actions cache
          platforms: linux/arm64 # Explicitly build for ARM architecture
